#
# MaÃ«l Valais <mael.valais@gmail.com>
#
# This AppVeyor configuration file has been writen to automate
# the building process and make deploying the application easy
# for the platform Windows.
#
# Like with the .travis.yml, this file will be executed
# by the appveyor servers and will build the project.
#
# 1. Why do I download this wodi32.zip instead of installing
#    ocaml-for-windows?
#    Actually it's because I couldn't make work the installer given on
#    protz.github.io/ocaml-installer/. The 64-bits version of the installer
#    doesn't seem to work properly and most importantly it pops up a window
#    that asks something to the user... which is impossible to deal in a CI env.
# 2. What is wodi32.zip and what does it contain?
#    It is a snapshot of the folder when I had wodi installed. Wodi has been
#    discontinued, this is why I had to make a "frozen in time" version.
#    It contains ocaml 4.02.1, fileutils, menhir and oasis.
#
# To allow AppVeyor knowing when things are pushed to the github repo,
# the owner of the repo had to link the repo in the AppVeyor website.
#
# Debugging an appveyor build
# ===========================
# You can use Windows Remote Desktop (also available on mac os x) to debug
# a build (instead of commit-trying a hundred times); everything is explained
# in https://www.appveyor.com/docs/how-to/rdp-to-build-worker/
#
# vim:set et sw=2 ts=2:

# Operating system (build VM template)
# It's a x64 VM. There is no way to force it to x86 apparently.
os: Windows Server 2012

# Scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))


# Clone directory
clone_folder: c:\touist

environment:
  JAVA_HOME: 'C:\\Program Files (x86)\\Java\\jdk1.7.0'
  CYG_MIRROR: http://cygwin.mirror.constant.com
  CYG_ROOT:  c:\ocaml32
  CYG_BASH:  c:\ocaml32\bin\bash
  CYG_SETUP: c:\setup-x86.exe
  CYG_CACHE: c:\ocaml32\var\cache\setup


# Build cache to preserve files/folders between builds (saves time)
# Note: to clean/rebuild the cache, I didn't find any other way than
# removing the line `- C:\wodi32` (for example). No explicit command
# on appveyor.com...
cache:
  - '%CYG_CACHE% -> appveyor.yml'
  - C:\yices -> appveyor.yml
  - '%CYG_ROOT%\home\appveyor\.opam -> appveyor.yml'
  - C:\Users\appveyor\.gradle -> appveyor.yml

# Scripts that run after cloning repository. "ps:" means windows PowerShell
install:
  # Opam on Windows: http://fdopen.github.io/opam-repository-mingw
  - javac -version
  - ps: 'Invoke-WebRequest http://cygwin.com/setup-x86.exe -OutFile "$env:CYG_SETUP"'
  - '%CYG_SETUP% --quiet-mode --no-shortcuts --only-site --root "%CYG_ROOT%" --site "%CYG_MIRROR%" --local-package-dir "%CYG_CACHE%" --packages rsync,patch,diffutils,curl,make,unzip,git,m4,perl,mingw64-i686-gcc-core,mingw64-i686-gmp --upgrade-also'

build_script:
  - '%CYG_BASH% -lc "cd /cygdrive/c/touist && ./ci/appveyor-script.sh"'

test_script:
  - '%CYG_BASH% -lc "cd /cygdrive/c/touist && make test 2>&1"'

# Important: to be able to use the artifact: /touist-.*\.zip/
# in deploy:, it is mandatory to add every .zip or whatever
# in here.
# The "deploy: artifact: " is actually using what you provided
# here; it actually filters those "path:". If all the ".zip"
# you want to upload have not been given in "path:", the
# deploy: artifact: thing will do nothing.
artifacts:
  - path: support/gui/build/distributions/TouIST-*.zip

skip_tags: false

deploy:
    # Deploy to GitHub Releases
  - provider: GitHub
    auth_token:
      # maelvalais ciphered credetials using appveyor encryption
      secure: "EWLXzbe9BdCFxAyFoz+kUJOZNyLLIpeCcXrl+aisecK9HMin6aAIt3wFaGSqvWPS"
    artifact: /TouIST-.*\.zip/          # upload all touist*.zip to release
    #draft: true
    #prerelease: true
    on:
      appveyor_repo_tag: true       # deploy on tag push only

# I set the same behaviour as for in .travis.yml:
# the commiter will only be emailed if his commit failed
# to build.
#
# I removed the notifications: block. I expect AppVeyor to have
# this behavior by default:
# - If the commit fails, then send an email to the committer only.
# - If the commit previously failing now passes, do not send an email.
# - Do not send an email to anyone else

#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))