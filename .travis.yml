#
# MaÃ«l Valais <mael.valais@gmail.com>
#
# This Travis-ci configuration file has been writen to automate
# the building process and make deploying the application easy.
# for the platforms Linux and Mac OS X.
#
# The travis-ci servers are going to run this script on any push
# to the repo. Basically, it
# - tells the author of a commit if his commit has broken the build,
# - deploys two .zip containing the linux and osx apps, with the
#   touist compiled in it
#
# To allow Travis-ci to know that something has been pushed to the repo
# the owner of the project (Olivier Lezaud back then) had had to link
# the repo to the Travis-ci website.
#
# vim:set et sw=2 ts=2:


language: java
os:
  - linux
  - osx
# Install packages using apt-get on linux environment
addons:
  apt:
    sources:
    - avsm
    packages:
    - opam
    - libgmp-dev
    - aspcud

cache:
  apt: true
  directories:
    - $HOME/.opam
    - $HOME/.gradle

before_install:
  # Install packages using brew on osx environment
  - javac -version
  - if [ $TRAVIS_OS_NAME = osx ]; then brew update && brew install opam; fi
  - opam init -y --auto-setup
  - eval `opam config env`
  - opam install -y ocamlfind menhir fileutils minisat cppo yices2 qbf ounit
  # Put the dependency yices-smt2 to external/
  - |
    case $TRAVIS_OS_NAME in
      osx) file=yices-2.4.2-x86_64-apple-darwin15.2.0-static-gmp.tar.gz ;;
      linux) file=yices-2.4.2-x86_64-unknown-linux-gnu-static-gmp.tar.gz ;;
    esac
  - curl -o $HOME/yices.tar.gz "http://yices.csl.sri.com/cgi-bin/yices2-newnewdownload.cgi?file=${file}&accept=I+Agree"
  - tar xzf $HOME/yices.tar.gz -C $HOME
  - cp $HOME/yices-*/bin/yices-smt2 support/gui/external
install:
  # Build touist
  - cd $TRAVIS_BUILD_DIR
  - ./configure --bindir support/gui/external --enable-tests --enable-yices2 --enable-qbf
  - make
  - make install # Only install binary 'touist' as long as --enable-lib is not given

  # Build the Java GUI touist.jar (in support/gui)
  - cd $TRAVIS_BUILD_DIR/support/gui
  - chmod ugo+x external/touist
  - |
    set -e # exit if one of the following commands fail
    case $TRAVIS_OS_NAME in
    linux)
      TERM=dumb ./gradlew distZip
      ARCH=linux-x86_64
      ;;
    osx)
      TERM=dumb ./gradlew createAppZip
      ARCH=mac-x86_64
      ;;
    esac
  - |
    temp=$(find build/distributions -name "TouIST*" | head -1)
    zip=$(echo $temp | sed "s/\(.*\)\.zip$/\1-${ARCH}.zip/")
    mv $temp $zip
  - ls -l $zip
  - cd $TRAVIS_BUILD_DIR
  - |
    git status
    if ! git status 2> /dev/null | tail -n1 | grep "nothing.*clean"; then
      echo "Error, git says the repo is dirty!" >&2; exit 1
    fi

# This part is meant for unit tests (among others).
script:
  - cd $TRAVIS_BUILD_DIR
  - make test

before_deploy:
  - cd $TRAVIS_BUILD_DIR
# This is the part where the touist.zip is pushed to the Github
# Releases. It will only do so when we create new tags, like v1.1.2.
deploy:
  skip_cleanup: true
  provider: releases
  api_key:
    # This is maelvalais's ciphered credentials.
    # It has been ciphered by travis's encryption system.
    secure: PNvSXUUBTgQjfio2QL9qQYtV8JCpT6nWkvRNDGFoAwdskusi719jRLjGYDKHrTHelxiehepKSxiFcPcOCfFD/WkfOLZvEBs463Xb3fldoNxUgRAWwYy/uEWwlD3lbSBREgtqrfuHP3uVKF7tYDlJXhTFpdM/nuwXGIwU5AuUhCw=
  file: support/gui/$zip
  on:
    branch: master
    tags: true

# The commiter will be informed that one of his commits
# broke the build. I didn't want us to receive an email
# each time we did a new branch, so I changed to 
#     on_success: never
notifications:
  email:
    on_success: never # default: change
    on_failure: always # default: always
